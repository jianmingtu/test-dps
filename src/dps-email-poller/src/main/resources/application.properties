server.servlet.context-path=/dpsemailpoller
server.port=${PORT:8080}

spring.rabbitmq.host: ${RABBITMQ_HOST:localhost}
spring.rabbitmq.port: ${RABBITMQ_PORT:5672}
spring.rabbitmq.username: ${RABBITMQ_USERNAME:guest}
spring.rabbitmq.password: ${RABBITMQ_PASSWORD:guest}

# Messaging configuration
dps.messaging.exchange-name=emailmessage
dps.messaging.routing-key=${DPS_TENANT}
dps.messaging.retryCount=3
dps.messaging.retryDelay=10
dps.messaging.type=producer

dps.tenant="${DPS_TENANT}"
springdoc.enable-native-support:${SWAGGER_ENABLE:false}
dpsemailpoller.api.version:1.0

# Exchange configuration
exchange.service.username=${EXCHANGE_USERNAME}
exchange.service.password=${EXCHANGE_PASSWORD}

# current (DEV) API Gateway endpoint for EWS
exchange.service.endpoint=${EXCHANGE_ENDPOINT}

spring.data.redis.host:${REDIS_HOST:localhost}
spring.data.redis.port:${REDIS_PORT:6379}
spring.data.redis.password:${REDIS_PASSWORD:admin}

# every 5 seconds
mailbox.poller.cron=*/5 * * * * ?
mailbox.poller.emails-per-batch=${MAILBOX_BATCH_SIZE:0}
mailbox.poller.error-folder=${MAILBOX_ERROR_HOLD_FOLDER:ErrorHold}
mailbox.poller.processing-folder=${MAILBOX_PROCESSING_FOLDER:Processing}
mailbox.poller.processed-folder=${MAILBOX_PROCESSING_FOLDER:Processed}

# Spring boot actuator health
management.endpoint.health.show-details=ALWAYS

